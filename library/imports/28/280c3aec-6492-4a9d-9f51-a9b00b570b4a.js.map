{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: {\n            default: null,\n            type: cc.Label\n        },\n    },\n\n    onLoad: function () {\n        this.OCCallIndex = 0\n\n    },\n\n    callToOC: function () {\n        if (cc.sys.os == cc.sys.OS_IOS) {\n            if (this.OCCallIndex == 0) {\n                //类名，方法名（静态方法）  ，参数\n                //带参数的方法名后面得带冒号\n                var ocReturned = jsb.reflection.callStaticMethod(\"TestStatic\", \n                    \"jsCalledWithParam:\", \"this is from js\")\n                this.label.string = ocReturned\n\n                this.OCCallIndex = (this.OCCallIndex + 1) % 3\n            } else if (this.OCCallIndex == 1) {\n                //多参数\n                var ocReturned = jsb.reflection.callStaticMethod(\"TestStatic\", \n                    \"jsCallWithString:AndInt:AndFloat:AndBool:\", \"this is from js\", 10, 0.1, true)\n                this.label.string = ocReturned\n                this.OCCallIndex = (this.OCCallIndex + 1) % 3\n            } else {\n                //不带参数的直接方法名\n                var ocReturned = jsb.reflection.callStaticMethod(\"TestStatic\", \n                    \"jsCalledNoParam\")\n                this.label.string = ocReturned\n                this.OCCallIndex = (this.OCCallIndex + 1) % 3\n            }\n\n        }\n    },\n\n    callToJava: function () {\n        if (cc.sys.os == cc.sys.OS_ANDROID) {\n            //包名+类名，方法名，参数、返回值类型声明，参数\n            //包名不能用点得用/\n            var javaReturned = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/TestStatic\", \"jsCalledWithParam\", \n                \"(Ljava/lang/String;IFZ)Ljava/lang/String;\", \"this is from js\", 10, 0.1, true)\n            this.label.string = javaReturned\n        }\n    },\n\n    callToCpp: function () {\n\n    },\n\n\n    startAnimation: function () {\n        //编辑器里先做好前20帧的动画\n        this.animation.play(\"frame_clip_1\")\n        //播放完成回调\n        this.animation.on(\"finished\", this.playNext.bind(this))\n\n        this.loadedFrames = []\n        this.loadIndex = 21\n        this.loadedClipIndex = 1\n        this.playingClipIndex = 1\n\n        //假设总共200帧，180是去除编辑器里弄好的20，0.02看是否卡顿调整\n        this.schedule(this.loadFrames, 0.02, 180)\n    },\n\n    loadFrames: function () {\n        let filename = \"frame_\" + this.loadIndex\n        cc.loader.loadRes(filename, cc.SpriteFrame, function (err, frame) {\n            if (err) {\n                return\n            }\n            //todo帧序可能错乱，待测试\n            this.loadedFrames.push(frame)\n\n            //大于20取前20创建clip并加到animatin里去\n            if (this.loadedFrames.length > 20) {\n                let tmpFrames = []\n                for (var i = 0; i < 20; i++) {\n                    var itemFrame = this.loadedFrames.shift()\n                    tmpFrames.push(itemFrame)\n                };\n                //0.04s每帧持续时间，跟你编辑器做的保持一致\n                let clip = cc.AnimationClip.createWithSpriteFrames(tmpFrames, 1 / 0.04)\n                this.loadedClipIndex = this.loadedClipIndex + 1\n                let clipName = \"frame_clip_\" + this.loadedClipIndex\n                this.animation.addClip(clip, clipName)\n            }\n        }.bind(this))\n        this.loadIndex = this.loadIndex + 1\n    },\n    playNext: function (event) {\n        let state = event.detail\n        let lastclip = state.clip\n        //各种删除\n        this.animation.removeClip(lastclip, true)\n        lastclip.destroy()\n\n        //播放下一段\n        this.playingClipIndex = this.playingClipIndex + 1\n        if (this.playingClipIndex > this.loadedClipIndex) {\n            cc.log(\"播放完成或者加载太慢，下个clip还没创建\")\n            return\n        }\n        let clipName = \"frame_clip_\" + this.loadedClipIndex\n        this.animation.play(clipName)\n    },\n});\n"
  ]
}